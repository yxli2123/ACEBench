{"id": "agent_multi_turn_0", "question": "Your name is Grace. You want to send a message to Frank with the content: 'Are you free tomorrow to have lunch with me?'. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi"]}
{"id": "agent_multi_turn_1", "question": "Your name is Grace. You want to send a message to Frank with the content: 'Are you free tomorrow to have lunch with me?'. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi"]}
{"id": "agent_multi_turn_2", "question": "Your name is Grace. You want to send a message to Frank with the content: 'Are you free tomorrow to have lunch with me?'. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi"]}
{"id": "agent_multi_turn_3", "question": "Your name is Grace. You want to send a message to Frank with the content: 'Are you free tomorrow to have lunch with me?'. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi"]}
{"id": "agent_multi_turn_4", "question": "You are Frank. You need to add a new reminder with the description being the content of a message Eve sent to you, and the reminder title being 'Meeting Reminder'. The reminder time is set to 2024-06-11 16:00. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi"]}
{"id": "agent_multi_turn_5", "question": "You are Frank. You need to add a new reminder with the description being the content of a message Eve sent to you, the reminder title being 'Meeting Reminder', and the reminder time set to the current time. The reminder time is set to 2024-06-11 16:00. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi"]}
{"id": "agent_multi_turn_6", "question": "You are Frank. You need to add a new reminder with the description being the content of a message Eve sent to you, the reminder title being 'Meeting Reminder', and the reminder time set to the current time. The reminder time is set to 2024-06-11 16:00. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi"]}
{"id": "agent_multi_turn_7", "question": "You are Frank. You need to add a new reminder with the description being the content of a message Eve sent to you, the reminder title being 'Meeting Reminder', and the reminder time set to the current time. The reminder time is set to 2024-06-11 16:00. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi"]}
{"id": "agent_multi_turn_8", "question": "You are Grace. You need to view the messages Frank sent to you and use the information to place a food delivery order for him. Your food delivery platform account username is Grace, and the password is password789. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_turn_9", "question": "You are Grace. You need to view the messages Frank sent to you and use the information to place a food delivery order for him. Your food delivery platform account username is Grace, and the password is password789. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_turn_10", "question": "You are Grace. You need to view the messages Frank sent to you and use the information to place a food delivery order for him. Your food delivery platform account username is Grace, and the password is password789. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_turn_11", "question": "You are Grace. You need to view the messages Frank sent to you and use the information to place a food delivery order for him. Your food delivery platform account username is Grace, and the password is password789. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_turn_12", "question": "You are Grace. You need to view the messages Frank sent to you and use the information to place a food delivery order for him. Afterward, you need to send a message to Frank: 'The total cost is () yuan.' Your food delivery platform account username is Grace, and the password is password789. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_turn_13", "question": "You are Grace. You need to view the messages Frank sent to you and use the information to place a food delivery order for him. Afterward, you need to send a message to Frank: 'The total cost is () yuan.' Your food delivery platform account username is Grace, and the password is password789. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_turn_14", "question": "You are Grace. You need to view the messages Frank sent to you and use the information to place a food delivery order for him. Afterward, you need to send a message to Frank: 'The total cost is () yuan.' Your food delivery platform account username is Grace, and the password is password789. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_turn_15", "question": "You are Grace. You need to view the messages Frank sent to you and use the information to place a food delivery order for him. Afterward, you need to send a message to Frank: 'The total cost is () yuan.' Your food delivery platform account username is Grace, and the password is password789. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_turn_16", "question": "You are Eve. You need to view the reminder titled 'To-do list' and complete the tasks inside it. Your food delivery platform account username is Eve, and the password is password123. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_turn_17", "question": "You are Eve. You need to view the reminder titled 'To-do list' and complete the tasks inside it. Your food delivery platform account username is Eve, and the password is password123. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_turn_18", "question": "You are Eve. You need to view the reminder titled 'To-do list' and complete the tasks inside it. Your food delivery platform account username is Eve, and the password is password123. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_turn_19", "question": "You are Eve. You need to view the reminder titled 'To-do list' and complete the tasks inside it. Your food delivery platform account username is Eve, and the password is password123. You will respond to the agent but will not proactively provide any unsolicited information. If a message needs to be deleted, you generally delete the oldest message.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_turn_20", "question": "You are Frank (user ID: user2, password: 'password456'), residing in Beijing. You plan to travel to Shanghai for 1-2 days. You intend to depart on July 15th and then choose the latest flight from Shanghai back to Beijing on July 16th to 17th. You prefer economy class, the payment method is bank, and you have only 1 piece of luggage. Below, you need to book the outbound flight from Beijing to Shanghai. Please note that you only need to book the outbound flight. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_21", "question": "You are Frank (user ID: user2, password: 'password456'), residing in Beijing. You plan to travel to Shanghai for 1-2 days. You intend to depart on July 15th and then choose the latest flight from Shanghai back to Beijing on July 16th to 17th. You prefer economy class, the payment method is bank, and you have only 1 piece of luggage. Below, you need to book the return flight from Shanghai to Beijing. Please note that you only need to book the return flight. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_22", "question": "You are Frank (user ID: user2, password: 'password456'), residing in Beijing. You plan to travel to Shanghai for 1-2 days. Below, you need to book round-trip tickets for this trip. Please note that both the outbound and return flights need to be booked, i.e., you need to make two bookings. You intend to depart on July 15th and then choose the latest flight from Shanghai back to Beijing between July 16th and 17th. You prefer economy class, the payment method is bank, and you have only 1 piece of luggage. Below, you need to book round-trip tickets for this trip. Please note that both the outbound and return flights need to be booked, i.e., you need to make two bookings. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_23", "question": "You are Eve (user ID: user1, password: 'password123'), currently residing in Beijing. You plan to stay in Shanghai for one day, as outlined in your reservation. Now, you wish to change your flight from Shanghai back to Beijing to the same evening. The seat type and payment method remain unchanged, and the new flight number should be obtained by directly searching for flights that meet the criteria. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_24", "question": "You are Eve (user ID: user1, password: 'password123'), currently residing in Beijing. You plan to stay in Shanghai for one day, as outlined in your reservation. Now, you wish to change your flight from Shanghai back to Beijing to the same evening. The seat type and payment method remain unchanged, but you need to add two pieces of luggage. The new flight number should be obtained by directly searching for flights that meet the criteria. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_25", "question": "You are Eve (user ID: user1, password: 'password123'), currently residing in Beijing. You plan to stay in Shanghai for one day, as outlined in your reservation. Now, you wish to change your flight from Shanghai back to Beijing to the next evening, changing the seat type to economy class while keeping everything else the same. The new flight number should be obtained by directly searching for flights that meet the criteria. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_26", "question": "You are Grace (user ID: user3, password: 'password789'), currently residing in Beijing. You plan to travel to Shenzhen for tourism and now need to book a flight from Beijing to Shenzhen on July 18th. The reserved class is economy by default, with one piece of luggage, and the payment method is bank. If there are no direct flights, you can first check for suitable connecting flights (with Nanjing as the layover city) and then book the flights in segments. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "find_transfer_flights", "description": "Find transfer flights from an origin city to a destination city with a stopover in a transfer city, ensuring the first flight arrives before the second flight departs.", "parameters": {"type": "object", "required": ["origin_city", "transfer_city", "destination_city"], "properties": {"origin_city": {"type": "string", "description": "The starting city for the flight."}, "transfer_city": {"type": "string", "description": "The city where the transfer takes place."}, "destination_city": {"type": "string", "description": "The final destination city for the flight."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_27", "question": "You are Grace (user ID: user3, password: 'password789'), currently residing in Beijing. You plan to travel to Shenzhen for tourism and now need to book a flight from Beijing to Shenzhen on July 18th. The reserved class is business class by default; if the amount is insufficient, you can change to economy class. You have one piece of luggage, and the payment method is bank. If there are no direct flights, you can first check for suitable connecting flights (with Nanjing as the layover city) and then book the flights in segments. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "find_transfer_flights", "description": "Find transfer flights from an origin city to a destination city with a stopover in a transfer city, ensuring the first flight arrives before the second flight departs.", "parameters": {"type": "object", "required": ["origin_city", "transfer_city", "destination_city"], "properties": {"origin_city": {"type": "string", "description": "The starting city for the flight."}, "transfer_city": {"type": "string", "description": "The city where the transfer takes place."}, "destination_city": {"type": "string", "description": "The final destination city for the flight."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_28", "question": "You are Grace (user ID: user3, password: 'password789'), currently residing in Beijing. You plan to visit relatives in Nanjing and now need to book a flight from Beijing to Nanjing on July 18th, preferably departing that evening. The reserved class is business class by default; if the amount is insufficient, you can change to economy class. You have four pieces of luggage, and the payment method is bank. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "find_transfer_flights", "description": "Find transfer flights from an origin city to a destination city with a stopover in a transfer city, ensuring the first flight arrives before the second flight departs.", "parameters": {"type": "object", "required": ["origin_city", "transfer_city", "destination_city"], "properties": {"origin_city": {"type": "string", "description": "The starting city for the flight."}, "transfer_city": {"type": "string", "description": "The city where the transfer takes place."}, "destination_city": {"type": "string", "description": "The final destination city for the flight."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
{"id": "agent_multi_turn_29", "question": "You are Grace (user ID: user3, password: 'password789'), currently residing in Beijing. You plan to visit relatives in Nanjing and now need to book a flight from Beijing to Nanjing on July 18th, preferably departing that morning. The reserved class is economy class by default, with four pieces of luggage, and the payment method is bank. You will respond to the agent but will not proactively provide any unsolicited information.", "initial_config": {}, "path": [], "function": [{"name": "get_user_details", "description": "Retrieve user details based on user ID and password.", "parameters": {"type": "dict", "required": ["user_id", "password"], "properties": {"user_id": {"type": "string", "description": "The id of the user."}, "password": {"type": "string", "description": "The password of the user."}}}}, {"name": "get_flight_details", "description": "Retrieve flight details based on origin and destination.", "parameters": {"type": "dict", "required": [], "properties": {"origin": {"type": "string", "description": "The origin city of the flight."}, "destination": {"type": "string", "description": "The destination city of the flight."}}}}, {"name": "get_reservation_details", "description": "Retrieve reservation details based on reservation ID or user ID.", "parameters": {"type": "dict", "required": [], "properties": {"reservation_id": {"type": "string", "description": "The reservation ID of the booking."}, "user_id": {"type": "string", "description": "The ID of the user."}}}}, {"name": "find_transfer_flights", "description": "Find transfer flights from an origin city to a destination city with a stopover in a transfer city, ensuring the first flight arrives before the second flight departs.", "parameters": {"type": "object", "required": ["origin_city", "transfer_city", "destination_city"], "properties": {"origin_city": {"type": "string", "description": "The starting city for the flight."}, "transfer_city": {"type": "string", "description": "The city where the transfer takes place."}, "destination_city": {"type": "string", "description": "The final destination city for the flight."}}}}, {"name": "reserve_flight", "description": "Book a flight for the user, including passenger details and payment methods.", "parameters": {"type": "dict", "required": ["user_id", "password", "flight_no", "cabin", "payment_methods", "baggage_count"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the reservation."}, "password": {"type": "string", "description": "The password of the user for authentication."}, "flight_no": {"type": "string", "description": "The flight number the user wants to book."}, "cabin": {"type": "string", "description": "The cabin class (e.g., 经济舱, 商务舱) for the booking."}, "payment_method": {"type": "string", "description": "the payment method(e.g., bank, cash) to reserve_flight "}, "baggage_count": {"type": "integer", "description": "The total number of checked baggage items."}}}}, {"name": "cancel_reservation", "description": "Cancel a flight reservation based on reservation ID and reason for cancellation.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id", "reason"], "properties": {"user_id": {"type": "string", "description": "The ID of the user who made the reservation."}, "reservation_id": {"type": "string", "description": "The ID of the reservation to cancel."}, "reason": {"type": "string", "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other')."}}}}, {"name": "modify_flight", "description": "Modify a flight reservation, including changing the flight number, cabin class, and additional baggage, and handling payment method for balance updates if required.", "parameters": {"type": "dict", "required": ["user_id", "reservation_id"], "properties": {"user_id": {"type": "string", "description": "The ID of the user making the modification."}, "reservation_id": {"type": "string", "description": "The reservation ID of the booking to be modified."}, "new_flight_no": {"type": "string", "description": "The new flight number to change to (optional).", "default": null}, "new_cabin": {"type": "string", "description": "The new cabin class to change to (optional).", "default": null}, "add_baggage": {"type": "integer", "description": "The number of additional checked baggage items to add (default is 0).", "default": 0}, "new_payment_method": {"type": "string", "description": "Optional payment method for any additional charges (either 'cash' or 'bank'). If not provided, the original payment method will be used.", "enum": ["cash", "bank"], "default": null}}}}], "involved_classes": ["Travel"]}
