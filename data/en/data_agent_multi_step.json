{"id": "agent_multi_step_0", "question": "I am Eve. I need to order a Domino's Super Supreme Pizza takeout from FoodPlatform and record how much I spent today in the reminder (Record name: \"Today's Spending,\" content: \"Today's spending () yuan,\" time: \"2024-07-15 09:30\"). (Account: Eve, password: password123).", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_step_1", "question": "I am Eve. I need to order a Domino's Super Supreme Pizza takeout from FoodPlatform and record how much I spent today in the reminder (Record name: \"Today's Spending,\" content: \"Today's spending () yuan,\" time: \"2024-07-15 09:30\"). (Account: Eve, password: password123).", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_step_2", "question": "I am Jack (username: Jack, password: password654). I want to order a barbecue from Jiutian BBQ, but I only have 120 yuan. I need to first understand the types and prices of Jiutian BBQ, then order one that I can afford.", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "FoodPlatform"]}
{"id": "agent_multi_step_3", "question": "I am Jack (username: Jack, password: password654). I want to order a barbecue from Jiutian BBQ, but I only have 120 yuan. I need to first understand the types and prices of Jiutian BBQ, then order one that I can afford.", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "FoodPlatform"]}
{"id": "agent_multi_step_4", "question": "I am Eve. I need to send a text message to Frank with the content \"Don't forget tomorrow afternoon's meeting\" (if the message capacity is full, delete the latest message).", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi"]}
{"id": "agent_multi_step_5", "question": "I am Eve. I need to send a text message to Frank with the content \"Don't forget tomorrow afternoon's meeting\" (if the message capacity is full, delete the latest message).", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi"]}
{"id": "agent_multi_step_6", "question": "I am Isaac (\"user_name\": \"Isaac\", \"password\": \"password654\"). I need to order one Stone Pot Bibimbap and one Korean Beef Bibimbap from Rice Village Bibimbap. (If the message capacity is full, delete the latest message.) Then send a text message to Frank with the content \"The takeout has been ordered", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_step_7", "question": "I am Isaac (\"user_name\": \"Isaac\", \"password\": \"password654\"). I need to order one Stone Pot Bibimbap and one Korean Beef Bibimbap from Rice Village Bibimbap. (If the message capacity is full, delete the latest message.) Then send a text message to Frank with the content \"The takeout has been ordered", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_step_8", "question": "I am Isaac (\"user_name\": \"Isaac\", \"password\": \"password654\"). I need to order one Stone Pot Bibimbap and one Korean Beef Bibimbap from Rice Village Bibimbap. (If the message capacity is full, delete the latest message.) Then send a text message to Frank with the content \"The takeout has been ordered", "initial_config": {"BaseApi": {"wifi": true, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_step_9", "question": "I am Isaac (\"user_name\": \"Isaac\", \"password\": \"password654\"). I need to order one Stone Pot Bibimbap and one Korean Beef Bibimbap from Rice Village Bibimbap. (If the message capacity is full, delete the latest message.) Then send a text message to Frank with the content \"The takeout has been ordered", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_step_10", "question": "I am Helen (\"user_name\": \"Helen\", \"password\": \"password321\"). I need to first check the messages Grace sent me, then fulfill his request in the text message. (If the message capacity is full, delete the most recent message.)", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_step_11", "question": "I am Helen (\"user_name\": \"Helen\", \"password\": \"password321\"). I need to first check the messages Grace sent me, then fulfill his request in the text message. (If the message capacity is full, delete the most recent message.)", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_step_12", "question": "I am Helen (\"user_name\": \"Helen\", \"password\": \"password321\"). I need to first check the messages Grace sent me, then fulfill his request in the text message. (If the message capacity is full, delete the most recent message.)", "initial_config": {"BaseApi": {"wifi": true, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_step_13", "question": "I am Helen (\"user_name\": \"Helen\", \"password\": \"password321\"). I need to first check the messages Grace sent me, then fulfill his request in the text message. (If the message capacity is full, delete the most recent message.)", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "FoodPlatform"]}
{"id": "agent_multi_step_14", "question": "I am Eve (\"use_name\": \"Eve\", \"password\": \"password123\"). I need to retrieve the content of the reminder titled \"To-do list\" and complete the tasks inside. (If the message capacity is full, delete the most recent message.)", "initial_config": {"BaseApi": {"wifi": false, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_step_15", "question": "I am Eve (\"use_name\": \"Eve\", \"password\": \"password123\"). I need to retrieve the content of the reminder titled \"To-do list\" and complete the tasks inside. (If the message capacity is full, delete the most recent message.)", "initial_config": {"BaseApi": {"wifi": true, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_step_16", "question": "I am Eve (\"use_name\": \"Eve\", \"password\": \"password123\"). I need to retrieve the content of the reminder titled \"To-do list\" and complete the tasks inside. (If the message capacity is full, delete the most recent message.)", "initial_config": {"BaseApi": {"wifi": true, "logged_in": false}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_step_17", "question": "I am Eve (\"use_name\": \"Eve\", \"password\": \"password123\"). I need to retrieve the content of the reminder titled \"To-do list\" and complete the tasks inside. (If the message capacity is full, delete the most recent message.)", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi", "ReminderApi", "FoodPlatform"]}
{"id": "agent_multi_step_18", "question": "I am Isaac. I need to delete text messages containing the keyword \"call\", then send a text message to Frank with the content \"See you tomorrow\" (if the message capacity is full, delete the most recent message).", "initial_config": {"BaseApi": {"wifi": false, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi"]}
{"id": "agent_multi_step_19", "question": "I am Isaac. I need to delete text messages containing the keyword \"call\", then send a text message to Frank with the content \"See you tomorrow\" (if the message capacity is full, delete the most recent message).", "initial_config": {"BaseApi": {"wifi": true, "logged_in": true}}, "path": [], "function": [{"name": "turn_on_wifi", "description": "Turn on WiFi connection.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "login_device", "description": "Log in to the device.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "send_message", "description": "Send a message from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name", "message"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the message."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the message."}, "message": {"type": "string", "description": "The content of the message to be sent."}}}}, {"name": "view_messages_between_users", "description": "Get all the messages sent from one user to another.", "parameters": {"type": "dict", "required": ["sender_name", "receiver_name"], "properties": {"sender_name": {"type": "string", "description": "The name of the user sending the messages."}, "receiver_name": {"type": "string", "description": "The name of the user receiving the messages."}}}}, {"name": "delete_message", "description": "Delete a message based on its message ID.", "parameters": {"type": "dict", "required": ["message_id"], "properties": {"message_id": {"type": "integer", "description": "The ID of the message to be deleted."}}}}, {"name": "search_messages", "description": "Search for messages from a specific user that contain a particular keyword.", "parameters": {"type": "dict", "required": ["user_name", "keyword"], "properties": {"user_name": {"type": "string", "description": "The name of the user whose messages are being searched."}, "keyword": {"type": "string", "description": "The keyword to search for within the messages."}}}}, {"name": "get_latest_message_id", "description": "Get the ID of the most recently sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "get_earliest_message_id", "description": "Get the ID of the earliest sent message.", "parameters": {"type": "dict", "required": [], "properties": {}}}, {"name": "add_reminder", "description": "Add a new reminder.", "parameters": {"type": "dict", "required": ["title", "description", "time"], "properties": {"title": {"type": "string", "description": "The title of the reminder."}, "description": {"type": "string", "description": "The description of the reminder."}, "time": {"type": "string", "description": "The time of the reminder, in the format YYYY-MM-DD HH:MM."}}}}, {"name": "view_reminder_by_title", "description": "View a specific reminder by its title.", "parameters": {"type": "dict", "required": ["title"], "properties": {"title": {"type": "string", "description": "The title of the reminder to search for."}}}}, {"name": "search_reminders", "description": "Search for reminders based on a keyword.", "parameters": {"type": "dict", "required": ["keyword"], "properties": {"keyword": {"type": "string", "description": "The keyword to search for in the reminder title or description."}}}}, {"name": "login_food_platform", "description": "Log in to the food delivery platform using a username and password.", "parameters": {"type": "dict", "required": ["username", "password"], "properties": {"username": {"type": "string", "description": "The user's username."}, "password": {"type": "string", "description": "The user's password."}}}}, {"name": "check_balance", "description": "Check the balance of a specified user.", "parameters": {"type": "dict", "required": ["user_name"], "properties": {"user_name": {"type": "string", "description": "The user's username."}}}}, {"name": "add_food_delivery_order", "description": "Place a food delivery order.", "parameters": {"type": "dict", "required": ["username", "merchant_name", "items"], "properties": {"username": {"type": "string", "description": "The name of the user placing the order."}, "merchant_name": {"type": "string", "description": "The name of the merchant the order is placed with."}, "items": {"type": "list", "description": "A list of items in the order, with each item containing name and quantity.", "items": {"type": "dict", "required": ["product", "quantity"], "properties": {"product": {"type": "string", "description": "The name of the product."}, "quantity": {"type": "integer", "description": "The quantity of the product."}}}}}}}, {"name": "get_products", "description": "Get a list of products from a specific merchant.", "parameters": {"type": "dict", "required": ["merchant_name"], "properties": {"merchant_name": {"type": "string", "description": "The name of the merchant whose product list is being retrieved."}}}}], "involved_classes": ["BaseApi", "MessageApi"]}
